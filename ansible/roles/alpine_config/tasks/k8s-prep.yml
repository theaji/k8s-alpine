## IMPORTANT: Running these plays will cause the nodes to reboot. Comment or remove the notify directive to change this

- name: Remove floppy, swap, cdrom, and usbdisk from /etc/fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: "{{ item }}"
    replace: ""
  loop:
    - "^.*cdrom.*$"
    - "^.*floppy.*$"
    - "^.*usbdisk.*$"
    - "^.*swap.*$"

- name: Disable swap
  ansible.builtin.command: swapoff -a
  register: swap_result
  changed_when: swap_result.changed

- name: Generate /etc/hosts file
  ansible.builtin.copy:
    content: |
      # /etc/hosts generated by Ansible
      127.0.0.1 localhost
      ::1       localhost
    dest: /etc/hosts
    mode: "0644"

- name: Add IP address of all hosts
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ item }}$'
    line: "{{ hostvars[item].ansible_host }} {{ item }}"
    state: present
  when: hostvars[item].ansible_host is defined
  with_items: "{{ groups.all }}"

- name: Install packages
  ansible.builtin.package:
    name:
      - containerd
      - cni-plugins
      - kubelet={{ k8s_version }}
      - kubeadm={{ k8s_version }}
      - kubectl={{ k8s_version }}
      - git
      - curl
      - nfs-utils
      - cni-plugin-flannel
      - cni-plugins
    state: present

- name: Pin package versions
  ansible.builtin.shell:
    cmd: |
      apk add kubelet={{ k8s_version }} && apk add kubeadm={{ k8s_version }} && apk add kubectl={{ k8s_version }}
  register: pkg_result
  changed_when: pkg_result.changed

- name: Enable containerd service
  ansible.builtin.service:
    name: containerd
    state: started
    enabled: true

- name: Enable kubelet service
  ansible.builtin.service:
    name: kubelet
    state: started
    enabled: true

- name: Enable promisc mode
  ansible.builtin.command:
    cmd: |
      ip link set "{{ default_interface }}" promisc on
  register: promisc_result
  changed_when: promisc_result.changed

- name: Set persistent promisc mode
  ansible.builtin.lineinfile:
    path: /etc/network/if-up.d/dad
    line: ip link set '{{ default_interface }}' promisc on
    state: present
    insertafter: EOF

- name: Enable persistent bridge networking
  ansible.builtin.lineinfile:
    dest: /etc/modules
    line: "br_netfilter"
    state: present
    insertafter: EOF

- name: Load br_netfilter
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Enable IP forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: true

- name: Enable ip tables options
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    sysctl_set: true
    state: present

- name: Enable ip6 tables options
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: 1
    sysctl_set: true
    state: present

- name: Replace cgroup line in rc.conf
  ansible.builtin.lineinfile:
    path: /etc/rc.conf
    regexp: '^#?\s*rc_cgroup_mode='
    line: 'rc_cgroup_mode="unified"'
  notify: Reboot

- name: Check for RPi
  ansible.builtin.command: cat /proc/cpuinfo
  register: cpu_info
  changed_when: false

- name: Check if cgroup line exists
  when: "'Raspberry Pi' in cpu_info.stdout"
  ignore_errors: true
  ansible.builtin.shell:
    cmd: |
      grep -q "cgroup_memory=1" /boot/cmdline.txt
  register: cgroup_line
  changed_when: false

# IF this is required, root_uuid should be specified in inventory/hosts_vars for each host

- name: Copy cmdline.txt template
  when: "'Raspberry Pi' in cpu_info.stdout  and cgroup_line.rc != 0"
  ansible.builtin.copy:
    content: |
      root=UUID="{{ root_uuid }} modules=sd-mod,usb-storage,ext4 quiet rootfstype=ext4 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory"
    dest: /boot/cmdline.txt
    mode: '0755'

- name: Ensure root filesystem is mounted as shared
  when: ansible_distribution == 'Alpine'
  ansible.builtin.cron:
    name: make-rshared
    job: "/bin/mount --make-rshared /"
    special_time: reboot

- name: Check if machine id exists
  ansible.builtin.stat:
    path: /etc/machine-id
  register: id_status
  changed_when: false

- name: Generate machine-id
  when: not id_status.stat.exists
  ansible.builtin.shell:
    cmd: |
      uuidgen > /etc/machine-id
  register: id_result
  changed_when: id_result.changed
